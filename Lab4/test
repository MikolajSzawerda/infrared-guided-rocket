#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/timerfd.h>
#include <sys/select.h>

void sleep_ms(int milliseconds) {
    int tfd = timerfd_create(CLOCK_MONOTONIC, 0);
    if (tfd == -1) {
        perror("timerfd_create");
        exit(EXIT_FAILURE);
    }

    struct timespec interval = {
        .tv_sec = milliseconds / 1000,
        .tv_nsec = (milliseconds % 1000) * 1000000
    };
    struct itimerspec ts = {
        .it_interval = interval,
        .it_value = interval
    };
    if (timerfd_settime(tfd, 0, &ts, NULL) == -1) {
        perror("timerfd_settime");
        exit(EXIT_FAILURE);
    }

    fd_set rfds;
    FD_ZERO(&rfds);
    FD_SET(tfd, &rfds);
    int maxfd = tfd + 1;
    int ret = select(maxfd, &rfds, NULL, NULL, NULL);
    if (ret == -1) {
        perror("select");
        exit(EXIT_FAILURE);
    } else if (ret == 0) {
        fprintf(stderr, "select timeout\n");
        exit(EXIT_FAILURE);
    }

    uint64_t exp;
    if (read(tfd, &exp, sizeof(exp)) == -1) {
        perror("read");
        exit(EXIT_FAILURE);
    }

    close(tfd);
}